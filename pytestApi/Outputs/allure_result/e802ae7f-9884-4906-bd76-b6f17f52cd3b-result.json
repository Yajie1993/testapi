{"name": "test_recharge[case4]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0 == 2", "trace": "self = <TestCases.test_recharge.TestRecharge object at 0x000001FCA6DCCBE0>\ncase = {'check_sql': None, 'except': '{\"code\": 2,\"msg\": \"数字格式化异常\"}', 'id': 5, 'method': 'post', ...}\ndb = <Common.handle_db.HandleDB object at 0x000001FCA6E15B20>\n\n    @pytest.mark.parametrize(\"case\",cases)\n    def test_recharge(self,case,db):\n    \n        logger.info(\"开始执行{}，{}\".format(case[\"id\"],case[\"title\"]))\n    \n        if case[\"request_data\"].find(\"#member_id#\") != -1:\n            case = replace_mark_with_data(case,\"#member_id#\",str(EnvData.member_id))\n    \n        if case[\"check_sql\"]:\n            leave_amount_before = db.select_one_data(case[\"check_sql\"])[\"leave_amount\"]\n            recharge_money = json.loads(case[\"request_data\"])[\"amount\"]\n            except_leave_amount = round(float(leave_amount_before) + recharge_money,2)\n            case = replace_mark_with_data(case, \"#money#\", str(except_leave_amount))\n    \n        resp = send_requests(case[\"method\"], case[\"url\"], (case[\"request_data\"]),token=EnvData.token)\n        logger.info(\"期望结果： {}\".format(case[\"except\"]))\n    \n        try :\n>           assert resp.json()[\"code\"]==json.loads(case[\"except\"])[\"code\"]\nE           assert 0 == 2\n\nTestCases\\test_recharge.py:36: AssertionError"}, "parameters": [{"name": "case", "value": "{'id': 5, 'title': 'id含字符串', 'method': 'post', 'url': 'member/recharge', 'request_data': '{\"member_id\":\"#member_id#\",\"amount\":2000}', 'except': '{\"code\": 2,\"msg\": \"数字格式化异常\"}', 'check_sql': None}"}], "start": 1651132936192, "stop": 1651132936247, "uuid": "a9333a8f-0a44-494f-8a3e-d18e07112d95", "historyId": "d1ec9303fb61bc7d3b8bd27b3c589d05", "testCaseId": "d828c44231d6080eb6b5013a3727efe6", "fullName": "TestCases.test_recharge.TestRecharge#test_recharge", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('clear_EnvData')"}, {"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_recharge"}, {"name": "subSuite", "value": "TestRecharge"}, {"name": "host", "value": "gfl2171"}, {"name": "thread", "value": "62072-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_recharge"}]}